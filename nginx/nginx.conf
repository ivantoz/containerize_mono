user nginx nginx;
worker_processes 2;
error_log /var/log/nginx/error.log;
worker_rlimit_nofile 8192;

events {
    worker_connections 4096;
}

http {
    ######################################
    #disable the display of nginx version 
    ######################################
    server_tokens off;

    log_format   main '$remote_addr - $remote_user [$time_local]  $status '
                        '"$request" $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
    ###############################
    # redirect to app server
    ###############################
    upstream app {
        server app:8000;

    }
    ##################################
    # redirect all requests to https
    ##################################
    server {
        listen 80;
        listen [::]:80;
        server_name localhost;

        location / {
            proxy_pass_request_headers on;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $remote_addr;
            proxy_set_header   X-Forwarded-Proto $scheme;

            return 301 https://$server_name$request_uri;
            
        }
        
    }

    server {

        ####################################################################
        # variable for app upstream so nginx will not fail if it is offline
        ####################################################################
        set $upstream_app app;
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name localhost;

        ssl_certificate /etc/ssl/certs/localhost.crt;
        ssl_certificate_key /etc/ssl/private/localhost.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_session_timeout 1d;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

        ################################################################
        # HSTS (ngx_http_headers_module is required) (31536000 seconds)
        #################################################################
        add_header Strict-Transport-Security "max-age=31536000" always; 

        location / {
            proxy_pass         http://$upstream_app;
            proxy_pass_request_headers on;
            proxy_redirect     off;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection keep-alive;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }
    }

}
